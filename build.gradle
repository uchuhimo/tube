plugins {
    id "net.ltgt.apt" version "0.6"
    id "java"
    id "findbugs"
    id "checkstyle"
    id "idea"
}

group "uchuhimo"
version "0.1"

sourceCompatibility = 1.8

repositories {
    //mavenCentral()
    maven { url "http://maven.aliyun.com/nexus/content/groups/public" }
    jcenter()
}

task wrapper(type: Wrapper) {
    gradleVersion = "3.2"
    distributionType = Wrapper.DistributionType.ALL
}

ext {
    findbugsVersion = "3.0.1"
    immutablesVersion = "2.3.9"
    slf4jVersion = "1.7.21"

    commonsLang3Version = "3.5"
    eclipseCollectionsVersion = "8.0.0"
    guavaVersion = "20.0"

    junitVersion = "4.12"
}

configurations {
    runtime.exclude group: "org.slf4j", module: "slf4j-log4j12"
    runtime.exclude group: "log4j", module: "log4j"
}

dependencies {
    apt "org.immutables:value:${immutablesVersion}"

    testApt "org.immutables:value:${immutablesVersion}"

    compileOnly(
            "com.google.code.findbugs:jsr305:${findbugsVersion}"
            , "com.google.code.findbugs:annotations:${findbugsVersion}"
            , "org.immutables:value:${immutablesVersion}"
    )

    compile(
            "org.slf4j:slf4j-api:${slf4jVersion}"
            , "org.slf4j:slf4j-log4j12:${slf4jVersion}"
            , "org.eclipse.collections:eclipse-collections-api:${eclipseCollectionsVersion}"
            , "org.eclipse.collections:eclipse-collections:${eclipseCollectionsVersion}"
            , "com.google.guava:guava:${guavaVersion}"
            , "org.apache.commons:commons-lang3:${commonsLang3Version}"
    )

    testCompileOnly(
            "org.immutables:value:${immutablesVersion}"
    )

    testCompile(
            "junit:junit:${junitVersion}"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

findbugs {
    ignoreFailures = true
    effort = "max"
    reportLevel = "medium"
    excludeFilter = file("${projectDir}/config/findbugs/excludeFilter.xml")
}

checkstyle {
    ignoreFailures = true
    toolVersion = "7.2"
    configProperties.checkstyleConfigDir = config.asFile().parent
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

idea {
    project {
        jdkName = "1.8.0_51"
        languageLevel = "1.8"
        vcs = "Git"
        
        ipr.withXml { provider ->
            def gradleSettings = """
  <component name="GradleSettings">
    <option name="linkedExternalProjectsSettings">
      <GradleProjectSettings>
        <option name="distributionType" value="WRAPPED" />
        <option name="externalProjectPath" value="\$PROJECT_DIR\$" />
        <option name="gradleJvm" value="#JAVA_HOME" />
        <option name="modules">
          <set>
            <option value="\$PROJECT_DIR\$" />
          </set>
        </option>
      </GradleProjectSettings>
    </option>
  </component>
"""
            provider.node.append(new XmlParser().parseText(gradleSettings))
        }
    }
}
